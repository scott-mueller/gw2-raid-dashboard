{"version":3,"sources":["apis/counterAPI.js","redux/reducers/counter/counterSlice.js","redux/actions/index.js","redux/reducers/collector.js","config.js","apis/gw2rba.js","redux/sagas/collectorSaga.js","redux/store.js","serviceWorker.js","pages/App/logo.svg","components/Counter/Counter.js","pages/App/App.js","utils/index.js","components/OverviewStatsCard/styles.js","components/OverviewStatsCard/OverviewStatsCard.js","components/BossTable/styles.js","components/BossTable/BossTableHead.js","components/BossTable/BossTable.js","pages/Collector/styles.js","components/PlayerBreakdownTable/styles.js","components/PlayerBreakdownTable/PlayerBreakdownTableHead.js","components/PlayerBreakdownTable/PlayerBreakdownTable.js","pages/Collector/Collector.js","pages/Dashboard/listItems.js","pages/Dashboard/Title.js","pages/Dashboard/Chart.js","pages/Dashboard/Deposits.js","pages/Dashboard/Orders.js","pages/Dashboard/Dashboard.js","routes.js","index.js","components/Counter/Counter.module.css"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectCount","counter","FETCH_COLLECTOR_DATA","FETCH_COLLECTOR_DATA_RESPONSE","stats","fetching","collectorStatsReducer","type","require","config","mongodb","appId","realmApiKey","process","REALM_API_KEY","mongoSession","app","Realm","id","Config","user","undefined","db","login","credentials","apiKey","logIn","currentUser","mongoClient","getCollectorStatsById","collectorId","collector","collection","findOne","_id","fetchCollectorData","call","put","collectorSaga","takeEvery","rootReducer","combineReducers","counterReducer","collectorStats","Boolean","window","location","hostname","match","Counter","count","useSelector","dispatch","useDispatch","useState","incrementAmount","setIncrementAmount","incrementValue","Number","className","styles","row","button","aria-label","onClick","textbox","onChange","e","target","asyncButton","getState","App","src","logo","alt","href","rel","descendingComparator","b","orderBy","fieldA","fieldB","localeCompare","sortVal","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","formatDPS","val","parts","toString","split","replace","join","paper","padding","display","overflow","flexDirection","paperRootOverrides","backgroundColor","fixedHeight","height","cardText","fontFamily","alignItems","paddingLeft","cardTitle","fontWeight","fontSize","textDecoration","titleGrid","paddingBottom","contentGrid","paddingTop","subheadingGrid","cardContent","verticalAlign","color","dps","combatTime","cardSubheading","prototype","formatMsToString","input","this","valueOf","h","Math","floor","m","s","useStyles","makeStyles","root","background","OverviewStatsCard","variant","classes","Paper","css","successCount","logCount","toFixed","totalBossDps","totalCleaveDps","moment","lastEncounterEnd","diff","firstEncounterStart","bossIconContainer","justifyContent","bossImage","borderRadius","text","tableContainer","table","minWidth","tablelHeadLabel","tableItem","visuallyHidden","border","clip","margin","position","top","width","BossTableHead","onRequestSort","TableHead","TableRow","disablePadding","label","numeric","headCell","TableCell","align","sortDirection","TableSortLabel","active","direction","property","event","theme","tableIconRow","paddingRight","alternatingColor","BossTable","React","setOrder","setOrderBy","page","setPage","rowsPerPage","bosses","tableData","setTableData","useEffect","Object","keys","bossName","boss","icon","iconLink","iconAlt","successRate","displayVal","success","fail","parseInt","avgBossDps","avgCleaveDPS","downs","deaths","buildTableData","emptyRows","min","length","TableContainer","Table","size","rowCount","TableBody","slice","component","scope","style","colSpan","TablePagination","rowsPerPageOptions","onPageChange","newPage","menuButton","marginRight","menuButtonHidden","title","flexGrow","titleText","appBar","appBarSpacer","content","container","PlayerBreakdownTableHead","PlayerBreakdownTable","accounts","accountName","account","encounterCount","avgCleaveDps","downDeathStats","firstDowns","firstDownCount","firstDeaths","firstDeathCount","revives","reviveTime","parseFloat","colorPrimary","containerLg","maxWidth","Collector","search","useLocation","qsValues","queryString","parse","CssBaseline","AppBar","Container","maxWidthLg","Grid","spacing","item","xs","md","lg","mainListItems","ListItem","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","gutterBottom","children","createData","time","Chart","useTheme","Fragment","ResponsiveContainer","LineChart","right","bottom","left","XAxis","dataKey","stroke","palette","secondary","YAxis","Label","angle","textAnchor","fill","Line","main","dot","preventDefault","depositContext","flex","Deposits","Link","date","shipTo","paymentMethod","rows","seeMore","marginTop","Orders","Copyright","Date","getFullYear","toolbar","toolbarIcon","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","Dashboard","open","setOpen","fixedHeightPaper","clsx","Toolbar","IconButton","edge","noWrap","Badge","badgeContent","Drawer","Divider","List","Box","pt","Routes","basename","exact","path","Home","About","store","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","run","collectorStatsSaga","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.8bdda163.chunk.js","sourcesContent":["// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from '../../../apis/counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","export const FETCH_COLLECTOR_DATA = 'FETCH_COLLECTOR_DATA';\nexport const FETCH_COLLECTOR_DATA_RESPONSE = 'FETCH_COLLECTOR_DATA_RESPONSE';","import { FETCH_COLLECTOR_DATA, FETCH_COLLECTOR_DATA_RESPONSE } from \"../actions\";\n\nconst initialState = {\n    stats: {},\n    fetching: false\n};\n\nconst collectorStatsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_COLLECTOR_DATA: {\n            return {\n                ...state,\n                fetching: true\n            }\n        }\n        case FETCH_COLLECTOR_DATA_RESPONSE: {\n            return {\n                ...state,\n                fetching: false,\n                stats: action.payload.stats\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default collectorStatsReducer;\n","require('dotenv').config();\n\nexport const config = {\n\n    mongodb: {\n        appId: 'scott-mueller-realm-yeisv',\n        realmApiKey: process.env.REALM_API_KEY || 'kcHq4RuuRxuTMAlp9iUgN8R1QRGKysJQ7SX0ZYsOFfLDIdTN5Ju6f6QGbe1Zb4fu'\n    }\n};\n","import * as Realm from 'realm-web';\nimport { config as Config } from '../config';\n\nconst mongoSession = {\n    app: new Realm.App({ id: Config.mongodb.appId }),\n    user: undefined,\n    db: undefined\n}\n\nconst login = async () => {\n\n    const credentials = Realm.Credentials.apiKey(Config.mongodb.realmApiKey);\n    mongoSession.user = await mongoSession.app.logIn(credentials);\n\n    const mongodb = mongoSession.app.currentUser.mongoClient('mongodb-atlas');\n    mongoSession.db = mongodb.db('gw2-rba');\n  };\n\nexport const getCollectorStatsById = async (collectorId) => {\n\n    if (!mongoSession.user || !mongoSession.db) {\n        await login();\n    }\n\n    const collector = mongoSession.db.collection('collectors').findOne({ _id: collectorId });\n    return collector;\n};\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getCollectorStatsById } from '../../apis/gw2rba';\nimport { FETCH_COLLECTOR_DATA, FETCH_COLLECTOR_DATA_RESPONSE } from '../actions';\n\nconst fetchCollectorData = function*(action) {\n    const stats = yield call(getCollectorStatsById, action.payload)\n    yield put({type: FETCH_COLLECTOR_DATA_RESPONSE, payload: { stats }})\n}\n\nconst collectorSaga = function*() {\n    yield takeEvery(FETCH_COLLECTOR_DATA, fetchCollectorData);\n};\nexport default collectorSaga;\n","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Reducers\nimport counterReducer from './reducers/counter/counterSlice';\nimport collectorStatsReducer from './reducers/collector';\n\n// Sagas\nimport collectorStatsSaga from './sagas/collectorSaga';\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  collectorStats: collectorStatsReducer\n});\n\nexport default function configureStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(rootReducer, initialState, composedEnhancers);\n\n  sagaMiddleware.run(collectorStatsSaga);\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from '../../redux/reducers/counter/counterSlice';\nimport styles from './Counter.module.css';\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport { Counter } from '../../components/Counter/Counter';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Counter />\n        <p>\n          We did it!\n        </p>\n        <span>\n          <span>Learn </span>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            React\n          </a>\n          <span>, </span>\n          <a\n            className=\"App-link\"\n            href=\"https://redux.js.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Redux\n          </a>\n          <span>, </span>\n          <a\n            className=\"App-link\"\n            href=\"https://redux-toolkit.js.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Redux Toolkit\n          </a>\n          ,<span> and </span>\n          <a\n            className=\"App-link\"\n            href=\"https://react-redux.js.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            React Redux\n          </a>\n        </span>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const descendingComparator = (a, b, orderBy) => {\n    let fieldA = a[orderBy];\n    let fieldB = b[orderBy];\n\n    if (typeof(fieldA) === 'string') {\n        return fieldA.localeCompare(fieldB);\n    }\n\n    if (typeof(fieldA) === 'object') {\n        fieldA = fieldA.sortVal;\n        fieldB = fieldB.sortVal;\n    }\n\n  if (fieldB < fieldA) {\n    return -1;\n  }\n  if (fieldB > fieldA) {\n    return 1;\n  }\n  return 0;\n}\n\nexport const getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport const stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport const formatDPS = (val) => {\n    \n    const parts = val.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n\n    //return val.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const mapBossNameToImage = (bossName) => {\n\n    return {\n        iconlink: 'https://wiki.guildwars2.com/images/f/fc/Mini_Air_Djinn.png',\n        iconAlt: 'Sabir'\n    }\n};","const styles = {\n    paper: {\n        padding: '12px',\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    paperRootOverrides: {\n        backgroundColor: '#f0f6ff'\n    },\n    fixedHeight: {\n        height: 205,\n    },\n    cardText: {\n        fontFamily: 'Oxanium',\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: '10px'\n    },\n    cardTitle: {\n        fontWeight: 200,\n        fontSize: '2.2em',\n        textDecoration: 'underline'\n    },\n    titleGrid: {\n        paddingBottom: 0\n    },\n    contentGrid: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    subheadingGrid: {\n        paddingTop: 0\n    },\n    cardContent: {\n        display: 'block',\n        height: '110px',\n        verticalAlign: 'middle',\n        fontWeight: 300,\n        fontSize: '6em',\n        color: '#F57600',\n    },\n    dps: {\n        paddingTop: '5px',\n        fontSize: '4.75em',\n    },\n    combatTime: {\n        paddingTop: '4px',\n        fontSize: '4.5em'\n    },\n    cardSubheading: {\n        fontWeight: 700,\n        fontSize: '1.2em'\n    }\n};\n\nexport default styles;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment-timezone';\nimport { css } from '@emotion/css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport { formatDPS } from '../../utils';\nimport styles from './styles';\n\n// eslint-disable-next-line no-extend-native\nNumber.prototype.formatMsToString = function () {\n    //return '88m 88s'\n    const input = this.valueOf()// + 1000000;\n\n    if(input > 3600000) {\n        const h = Math.floor(input / 3600000);\n        const m = Math.floor((input - (h * 3600000)) / 60000)\n        return `${h}h ${m}m`\n    }\n\n\n    const m = Math.floor(input / 60000).toString();\n    const s = Math.floor((input - (m * 60000)) / 1000).toString();\n    //const ms = (input - ((m * 60000) + (s * 1000))).toString();\n    return `${m}m ${s}s`\n\n    //return m.padStart(2, '0') + 'm ' + s.padStart(2, '0') + 's ' + ms.padStart(3, '0') + 'ms';\n};\n\nconst useStyles = makeStyles({\n    root: {\n      background: '#E6EEF0',\n    }\n  });\n\nconst OverviewStatsCard = ({ variant }) => {\n    const stats = useSelector((state) => state?.collectorStats?.stats?.stats);\n    const classes = useStyles();\n    \n    if (!stats) {\n        return (<div></div>)\n    }\n\n    // eslint-disable-next-line default-case\n    switch (variant) {\n        case 'successRate': {\n            return (\n                <Paper classes={{ root: classes.root}}className={css(styles.paper, styles.fixedHeight)}>\n                    <div className={css(styles.cardText, styles.cardTitle)}>\n                        Success Rate\n                    </div>\n                    <div className={css(styles.cardText, styles.cardContent)}>\n                        {`${((stats.successCount / stats.logCount) * 100).toFixed(0)}%`}\n                    </div>\n                    <div className={css(styles.cardText, styles.cardSubheading)}>{`${stats.successCount} of ${stats.logCount} Logs`}</div>\n                </Paper>\n            )\n        }\n        case 'avgBossDps': {\n            return (\n                <Paper classes={{ root: classes.root}}className={css(styles.paper, styles.fixedHeight)}>\n                    <div className={css(styles.cardText, styles.cardTitle)}>Avg Boss Dps</div>\n                    <div className={css(styles.cardText, styles.cardContent, styles.dps)}>{`${formatDPS((stats.totalBossDps / stats.logCount).toFixed(0))}`}</div>\n                </Paper>\n            );\n        }\n        case 'avgCleaveDps': {\n            return (\n                <Paper classes={{ root: classes.root}}className={css(styles.paper, styles.fixedHeight)}>\n                    <div className={css(styles.cardText, styles.cardTitle)}>Avg Cleave Dps</div>\n                    <div className={css(styles.cardText, styles.cardContent, styles.dps)}>{`${formatDPS((stats.totalCleaveDps / stats.logCount).toFixed(0))}`}</div>\n                </Paper>\n            );\n        }\n        case 'encounterTime': {\n            return (\n                <Paper classes={{ root: classes.root}}className={css(styles.paper, styles.fixedHeight)}>\n                    <div className={css(styles.cardText, styles.cardTitle)}>Time in Combat</div>\n                    <div className={css(styles.cardText, styles.cardContent, styles.combatTime)}>{stats.combatTime.formatMsToString()}</div>\n                    <div className={css(styles.cardText, styles.cardSubheading)}>{`${moment(stats.lastEncounterEnd).diff(stats.firstEncounterStart).formatMsToString()} Total Elapsed Time`}</div>\n                </Paper>\n            )\n        }\n    }\n};\n\nexport default OverviewStatsCard;","const styles = {\n    bossIconContainer: {\n        display: 'flex',\n        justifyContent: 'left',\n        alignItems: 'center'\n    },\n    bossImage: {\n        borderRadius: '10px',\n    },\n    paper: {\n        padding: '12px',\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    text: {\n        fontFamily: 'Oxanium',\n        fontWeight: 200,\n        fontSize: '2.2em',\n        textDecoration: 'underline',\n        paddingLeft: '10px'\n    },\n    tableContainer: {\n        paddingLeft: '10px'\n    },\n    table: {\n        minWidth: 750,\n    },\n    tablelHeadLabel: {\n        fontFamily: 'Oxanium',\n        fontSize: '1em',\n        fontWeight: '700'\n    },\n    tableItem: {\n        fontFamily: 'Oxanium',\n        fontSize: '1em',\n        fontWeight: '400'\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n};\n\nexport default styles;\n","import React from 'react';\nimport { css } from '@emotion/css';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport styles from './styles';\n\nconst BossTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n      onRequestSort(event, property);\n    };\n  \n    const headCells = [\n        { id: 'icon', disablePadding: true, label: ''},\n        { id: 'bossName', numeric: false, disablePadding: true, label: 'Boss Name' },\n        { id: 'successRate', numeric: true, disablePadding: false, label: 'Success Rate' },\n        { id: 'avgBossDps', numeric: true, disablePadding: false, label: 'Avg Boss Dps' },\n        { id: 'avgCleaveDps', numeric: true, disablePadding: false, label: 'Avg Cleave Dps' },\n        { id: 'downs', numeric: true, disablePadding: false, label: 'Downs' },\n        { id: 'deaths', numeric: true, disablePadding: false, label: 'Deaths' },\n    ];\n  \n    return (\n      <TableHead>\n        <TableRow>\n          {headCells.map((headCell) => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                className={css(styles.tablelHeadLabel)}\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'desc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <span className={css(styles.visuallyHidden)}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n}\n\nexport default BossTableHead;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { css } from '@emotion/css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport BossTableHead from './BossTableHead';\nimport { formatDPS, getComparator, stableSort } from '../../utils';\nimport styles from './styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      background: '#E6EEF0',\n    },\n    tableItem: styles.tableItem,\n    tableIconRow: {\n        paddingLeft: '16px',\n        paddingTop: '0px',\n        paddingBottom: '0px',\n        paddingRight: '16px'\n    },\n    alternatingColor: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: 'white',\n        },\n    }\n  }));\n\nconst buildTableData = (bosses) => Object.keys(bosses).map((bossName) => {\n    const boss = bosses[bossName];\n    return {\n        icon: { iconLink: boss.icon, iconAlt: `${boss.name} Icon`},\n        bossName: boss.name,\n        successRate: {\n            displayVal: `${((boss.success / (boss.success + boss.fail)) * 100).toFixed(0)}% - (${boss.success} of ${boss.success + boss.fail})`,\n            sortVal: parseInt((boss.success / (boss.success + boss.fail)) * 100)\n        },\n        avgBossDps: {\n            displayVal: formatDPS(parseInt(boss.totalBossDps / (boss.success + boss.fail))),\n            sortVal: parseInt(boss.totalBossDps / (boss.success + boss.fail)),\n        },\n        avgCleaveDPS: {\n            displayVal: formatDPS(parseInt(boss.totalCleaveDps / (boss.success + boss.fail))),\n            sortVal: parseInt(boss.totalCleaveDps / (boss.success + boss.fail)),\n        },\n        downs: boss.downs,\n        deaths: boss.deaths\n    }\n});\n\nconst BossTable = () => {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('desc');\n    const [orderBy, setOrderBy] = React.useState('bossName');\n    const [page, setPage] = React.useState(0);\n    const rowsPerPage = 10;\n\n    const bosses = useSelector((state) => state?.collectorStats?.stats?.stats?.bosses);\n    const [tableData, setTableData] = useState([]);\n\n    useEffect(() => {\n        if (bosses) {\n            setTableData(buildTableData(bosses));\n        }\n    }, [bosses])\n\n    const handleRequestSort = (event, property) => {\n        const isDesc = orderBy === property && order === 'desc';\n        setOrder(isDesc ? 'asc' : 'desc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, tableData.length - page * rowsPerPage);\n\n    return (\n        <Paper classes={{ root: classes.root}} className={css(styles.paper)}>\n            <div className={css(styles.text)}>Boss Table</div>\n            <TableContainer className={css(styles.tableContainer)}>\n                <Table\n                    className={css(styles.table)}\n                    size={'medium'}\n                    aria-label=\"enhanced table\"\n                >\n                    <BossTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={handleRequestSort}\n                        rowCount={tableData.length}\n                    />\n                    <TableBody>\n                        {stableSort(tableData, getComparator(order, orderBy))\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, index) => (\n                                <TableRow classes={{root: classes.alternatingColor}} key={row.bossName}>\n                                    <TableCell classes={{ root: classes.tableIconRow }}>\n                                        <div className={css(styles.bossIconContainer)}>\n                                            <img \n                                                src={row.icon.iconLink} \n                                                alt={row.icon.iconAlt} \n                                                width={40} \n                                                height={40} \n                                                className={css(styles.bossImage)}\n                                            />\n                                        </div>\n                                    </TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} component=\"th\" scope=\"row\" padding=\"none\">\n                                        {row.bossName}\n                                    </TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.successRate.displayVal}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.avgBossDps.displayVal}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.avgCleaveDPS.displayVal}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.downs}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.deaths}</TableCell>\n                                </TableRow>\n                            ))}\n                        {emptyRows > 0 && (\n                            <TableRow style={{ height: (53) * emptyRows }}>\n                            <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10]}\n                component=\"div\"\n                count={tableData.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n            />\n        </Paper>\n  );\n}\n\nexport default BossTable;\n","const styles = {\n    root: {\n        display: 'flex',\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    titleText: {\n        fontFamily: 'Oxanium',\n        fontWeight: 400,\n        paddingLeft: '30px',\n        color: '#F57600'\n    },\n    appBar: {\n        backgroundColor: 'black'\n    },\n    appBarSpacer: {\n        height: 100\n    },\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n        background: '#303F4B'\n    },\n    container: {\n        paddingTop: '10px',\n        paddingBottom: '10px',\n    },\n\n    paper: {\n        padding: '12px',\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n};\n\nexport default styles;\n","const styles = {\n    paper: {\n        padding: '12px',\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    text: {\n        fontFamily: 'Oxanium',\n        fontWeight: 200,\n        fontSize: '2.2em',\n        textDecoration: 'underline',\n        paddingLeft: '10px'\n    },\n    tableContainer: {\n        paddingLeft: '10px'\n    },\n    table: {\n        minWidth: 1240,\n    },\n    tablelHeadLabel: {\n        fontFamily: 'Oxanium',\n        fontSize: '1em',\n        fontWeight: '700'\n    },\n    tableItem: {\n        fontFamily: 'Oxanium',\n        fontSize: '1em',\n        fontWeight: '400'\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n};\n\nexport default styles;\n","import React from 'react';\nimport { css } from '@emotion/css';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport styles from './styles';\n\nconst PlayerBreakdownTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n      onRequestSort(event, property);\n    };\n  \n    const headCells = [\n        { id: 'name', numeric: false, disablePadding: false, label: 'Account Name' },\n        { id: 'encounterCount', numeric: true, disablePadding: false, label: 'Encounters' },\n        { id: 'avgBossDps', numeric: true, disablePadding: false, label: 'Avg Boss Dps' },\n        { id: 'avgCleaveDps', numeric: true, disablePadding: false, label: 'Avg Cleave Dps' },\n        { id: 'downs', numeric: true, disablePadding: false, label: 'Downs' },\n        { id: 'firstDowns', numeric: true, disablePadding: false, label: 'First Downs' },\n        { id: 'deaths', numeric: true, disablePadding: false, label: 'Deaths' },\n        { id: 'firstDeaths', numeric: true, disablePadding: false, label: 'First Deaths' },\n        { id: 'revives', numeric: true, disablePadding: false, label: 'Revives' },\n        { id: 'reviveTime', numeric: true, disablePadding: false, label: 'Revive Time' },\n    ];\n  \n    return (\n      <TableHead>\n        <TableRow>\n          {headCells.map((headCell) => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                className={css(styles.tablelHeadLabel)}\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'desc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <span className={css(styles.visuallyHidden)}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n}\n\nexport default PlayerBreakdownTableHead;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { css } from '@emotion/css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport PlayerBreakdownTableHead from './PlayerBreakdownTableHead';\nimport { getComparator, stableSort, formatDPS } from '../../utils';\nimport styles from './styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      background: '#E6EEF0',\n    },\n    tableItem: styles.tableItem,\n    alternatingColor: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: 'white',\n        },\n    }\n}));\n\nconst buildTableData = (accounts) => Object.keys(accounts).map((accountName) => {\n    const account = accounts[accountName];\n    return {\n        name: account.accountName,\n        encounterCount: account.encounterCount,\n        avgBossDps: {\n            displayVal: formatDPS((account.totalBossDps / account.encounterCount).toFixed(0)),\n            sortVal:  parseInt(account.totalBossDps / account.encounterCount)\n        },\n        avgCleaveDps: {\n            displayVal: formatDPS((account.totalCleaveDps / account.encounterCount).toFixed(0)),\n            sortVal:  parseInt(account.totalCleaveDps / account.encounterCount)\n        },\n        downs: account.downDeathStats.downs,\n        firstDowns: account.downDeathStats.firstDownCount,\n        deaths: account.downDeathStats.deaths,\n        firstDeaths: account.downDeathStats.firstDeathCount,\n        revives: account.revives,\n        reviveTime: parseFloat(account.reviveTime.toFixed(1))\n    }\n});\n\nconst PlayerBreakdownTable = () => {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('desc');\n    const [orderBy, setOrderBy] = React.useState('avgBossDps');\n\n    const accounts = useSelector((state) => state?.collectorStats?.stats?.stats?.accounts);\n    const [tableData, setTableData] = useState([]);\n\n    useEffect(() => {\n        if (accounts) {\n            setTableData(buildTableData(accounts));\n        }\n    }, [accounts])\n\n    const handleRequestSort = (event, property) => {\n        const isDesc = orderBy === property && order === 'desc';\n        setOrder(isDesc ? 'asc' : 'desc');\n        setOrderBy(property);\n    };\n\n    return (\n        <Paper classes={{ root: classes.root}} className={css(styles.paper)}>\n            <div className={css(styles.text)}>Player Breakdown Table</div>\n            <TableContainer className={css(styles.tableContainer)}>\n                <Table\n                    className={css(styles.table)}\n                    size={'medium'}\n                    aria-label=\"enhanced table\"\n                >\n                    <PlayerBreakdownTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={handleRequestSort}\n                        rowCount={tableData.length}\n                    />\n                    <TableBody>\n                        {stableSort(tableData, getComparator(order, orderBy))\n                            .map((row, index) => (\n                                <TableRow classes={{root: classes.alternatingColor}} key={row.name}>\n                                    <TableCell classes={{root: classes.tableItem}} component=\"th\" scope=\"row\">\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.encounterCount}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.avgBossDps.displayVal}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.avgCleaveDps.displayVal}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.downs}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.firstDowns}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.deaths}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.firstDeaths}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.revives}</TableCell>\n                                    <TableCell classes={{root: classes.tableItem}} align=\"right\">{row.reviveTime}</TableCell>\n                                </TableRow>\n                            ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Paper>\n  );\n}\n\nexport default PlayerBreakdownTable;\n","import React, { useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport queryString from 'query-string'\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// MATERIAL-UI COMPONENTS\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport OverviewStatsCard from '../../components/OverviewStatsCard/OverviewStatsCard';\nimport BossTable from '../../components/BossTable/BossTable';\n\nimport { FETCH_COLLECTOR_DATA } from '../../redux/actions';\nimport styles from './styles';\nimport PlayerBreakdownTable from '../../components/PlayerBreakdownTable/PlayerBreakdownTable';\n\n\nconst useStyles = makeStyles({\n    colorPrimary: {\n        backgroundColor: 'black'\n    },\n    containerLg: {\n        maxWidth: '1500px'\n    }\n});\n\nconst Collector = () => {\n        \n    const classes = useStyles();\n\n    const { search } = useLocation();\n    const dispatch = useDispatch();\n    const collector = useSelector((state) => state?.collectorStats?.stats);\n    \n    useEffect(() => {\n        const qsValues = queryString.parse(search);\n        return dispatch({type: FETCH_COLLECTOR_DATA, payload: qsValues.collectorId})\n    }, [search, dispatch]);\n    \n    return (\n        <div className={css(styles.root)}>\n            <CssBaseline />\n            <AppBar classes={{colorPrimary: classes.colorPrimary}}>\n                <div>\n                    <h1 className={css(styles.titleText)}>Showing Stats for Collector: {collector?._id}</h1>\n                </div>\n            </AppBar>\n            <main className={css(styles.content)}>\n                <div className={css(styles.appBarSpacer)} />\n                <Container maxWidth=\"lg\" classes = {{ maxWidthLg: classes.containerLg }} className={css(styles.container)}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={6} lg={3}>\n                            <OverviewStatsCard variant=\"successRate\"/>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={3}>\n                            <OverviewStatsCard variant=\"avgBossDps\"/>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={3}>\n                            <OverviewStatsCard variant=\"avgCleaveDps\"/>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={3}>\n                            <OverviewStatsCard variant=\"encounterTime\"/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <BossTable />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <PlayerBreakdownTable />\n                        </Grid>\n                    </Grid>\n                </Container>\n                <div className={css(styles.appBarSpacer)} />\n            </main>\n        </div>\n    )\n};\n\nexport default Collector;\n\n/**\n * General Stats\n *  -   4 cards along the top row\n *      -   Success Rate - success / fail counts on second row\n *      -   Average Boss DPS\n *      -   Average Cleave DPS\n *      -   Time in encounter - to see the faffing\n * \n * Bosses Table\n *  -   Table showing information about each boss\n *      -   Boss Icon\n *      -   Boss Name\n *      -   Success\n *      -   Fail\n *      -   Success Rate\n *      -   Average Boss DPS\n *      -   Average Cleave DPS\n *      Collapsable\n *      -   Average boon uptimes - Might as well do all of them - with icons\n * Player Breakdown Table\n *  -   For each player\n *      -   Profession Icons\n *      -   Number of logs\n *      -   Avg dps (boss/cleave)\n *      -   Revives\n *      -   Revive Time\n *      -   Downs\n *      -   Deaths\n *  -   Each player has expandable section\n *      -   Roles and their counts as bubbles - roles colour coded\n */\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Chart from './Chart';\nimport Deposits from './Deposits';\nimport Orders from './Orders';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n} from \"react-router-dom\";\nimport App from \"./pages/App/App\";\nimport Collector from \"./pages/Collector/Collector\";\nimport Dashboard from './pages/Dashboard/Dashboard';\n\nexport default function Routes() {\n\n  return (\n    <Router basename=\"/\">\n            <Route exact path=\"/\" component={Home}>\n            </Route>\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/collector\">\n                <Collector />\n            </Route>\n            <Route path=\"/app\">\n                <App />\n            </Route>\n            <Route path=\"/dashboard-demo\">\n              <Dashboard />\n            </Route>\n    </Router>\n  );\n}\n\nconst Home = () => <div><h2>Home</h2></div>\nconst About = () => <div><h2>About</h2></div>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport configureStore from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './routes';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__qB-H1\",\"value\":\"Counter_value__2-sRl\",\"button\":\"Counter_button__3DWPw\",\"textbox\":\"Counter_textbox__13qA1\",\"asyncButton\":\"Counter_asyncButton__3Hket Counter_button__3DWPw\"};"],"sourceRoot":""}